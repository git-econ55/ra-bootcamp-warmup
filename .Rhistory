cat("Forecast without Synergy:\n")
print(df_fc_no)
cat("\nForecast with Synergy:\n")
print(df_fc_with)
# 必要なパッケージの読み込み
library(ggplot2)
library(forecast)
library(dplyr)
library(tidyr)
# データ準備
panasonic_sales <- c(2152590, 2129620, 2121690, 2196100, 2180880, 2089730, 2029690, 2154420,
2160590, 2090070, 1973860, 1965440, 1889800, 1741130, 1792420, 1825500,
1814130, 1667240, 1391910, 1734980, 1911210, 1953300, 1891130, 1919750,
2074810, 1999440, 2008730, 2070000, 2054300, 1992590, 1865270, 1921300,
1868800, 1765000, 1748510, 1882400, 1910900, 1902600, 1857840)
sumitomo_sales <- c(564963, 510921, 527784, 453632, 500284, 416401, 440178, 376305, 463414,
423509, 428886, 353898, 417857, 335198, 343820, 289055, 313934, 280364,
245583, 301353, 272993, 294739, 235009, 401912, 314130, 343577, 249274,
365472, 294417, 333448, 228661, 341537, 258252, 305913, 207662, NA,
243600, 290700, 195777)
# 欠損値の処理とデータ調整
panasonic_sales <- panasonic_sales[!is.na(panasonic_sales)]
sumitomo_sales <- sumitomo_sales[!is.na(sumitomo_sales)]
# 時系列オブジェクトの作成
ts_panasonic <- ts(panasonic_sales, frequency = 4, start = c(2015, 1))
ts_sumitomo <- ts(sumitomo_sales, frequency = 4, start = c(2015, 1))
ts_combined <- ts_panasonic + ts_sumitomo
# 各社の個別予測モデル
fit_panasonic <- Arima(ts_panasonic, order = c(1,1,1), include.drift = TRUE)
fit_sumitomo <- Arima(ts_sumitomo, order = c(1,1,1), include.drift = TRUE)
fit_combined <- Arima(ts_combined, order = c(1,1,1), include.drift = TRUE)
# 各シナリオの予測（40四半期分、10年）
fc_panasonic <- forecast(fit_panasonic, h = 40, level = c(80, 95))
fc_sumitomo <- forecast(fit_sumitomo, h = 40, level = c(80, 95))
fc_no_synergy <- forecast(fit_combined, h = 40, level = c(80, 95))
# シナジーありシナリオ（2年後から5%成長）
fc_with_synergy <- forecast(fit_combined, h = 40, level = c(80, 95))
fc_with_synergy$mean[9:40] <- fc_with_synergy$mean[9:40] * 1.05^((1:32)-1)
fc_with_synergy$lower[9:40,2] <- fc_with_synergy$lower[9:40,2] * 1.05^((1:32)-1)
fc_with_synergy$upper[9:40,2] <- fc_with_synergy$upper[9:40,2] * 1.05^((1:32)-1)
# データフレーム準備
forecast_quarters <- seq(from = 2025, by = 0.25, length.out = 40)
# プロット用データフレーム
df_panasonic <- data.frame(
Quarter = time(ts_panasonic),
Sales = ts_panasonic,
Company = "パナソニック",
Type = "実績"
)
df_sumitomo <- data.frame(
Quarter = time(ts_sumitomo),
Sales = ts_sumitomo,
Company = "住友林業",
Type = "実績"
)
df_fc_panasonic <- data.frame(
Quarter = forecast_quarters,
Sales = as.numeric(fc_panasonic$mean),
Company = "パナソニック",
Type = "予測",
Lower = fc_panasonic$lower[,2],
Upper = fc_panasonic$upper[,2]
)
df_fc_sumitomo <- data.frame(
Quarter = forecast_quarters,
Sales = as.numeric(fc_sumitomo$mean),
Company = "住友林業",
Type = "予測",
Lower = fc_sumitomo$lower[,2],
Upper = fc_sumitomo$upper[,2]
)
df_fc_no_synergy <- data.frame(
Quarter = forecast_quarters,
Sales = as.numeric(fc_no_synergy$mean),
Company = "合併（シナジーなし）",
Type = "予測",
Lower = fc_no_synergy$lower[,2],
Upper = fc_no_synergy$upper[,2]
)
df_fc_with_synergy <- data.frame(
Quarter = forecast_quarters,
Sales = as.numeric(fc_with_synergy$mean),
Company = "合併（シナジーあり）",
Type = "予測",
Lower = fc_with_synergy$lower[,2],
Upper = fc_with_synergy$upper[,2]
)
# 全データの結合
df_all <- rbind(df_panasonic, df_sumitomo, df_fc_panasonic, df_fc_sumitomo,
df_fc_no_synergy, df_fc_with_synergy)
# プロット作成
ggplot(df_all, aes(x = Quarter, y = Sales, color = Company, linetype = Type)) +
geom_line(size = 1) +
geom_ribbon(data = subset(df_all, Type == "予測" & Company %in% c("合併（シナジーなし）", "合併（シナジーあり）")),
aes(ymin = Lower, ymax = Upper, fill = Company),
alpha = 0.2) +
scale_color_manual(values = c("パナソニック" = "darkgreen",
"住友林業" = "brown",
"合併（シナジーなし）" = "blue",
"合併（シナジーあり）" = "purple")) +
scale_fill_manual(values = c("合併（シナジーなし）" = "blue",
"合併（シナジーあり）" = "purple")) +
labs(title = "パナソニックと住友林業 合併シナリオ分析",
x = "年（四半期）",
y = "売上高（百万円）") +
theme_minimal() +
theme(legend.position = "right")
# 予測結果の表示
cat("【シナリオ別予測結果】\n")
cat("パナソニック単独予測最終年度：", tail(df_fc_panasonic$Sales, 1), "百万円\n")
cat("住友林業単独予測最終年度：", tail(df_fc_sumitomo$Sales, 1), "百万円\n")
cat("シナジーなし合併予測最終年度：", tail(df_fc_no_synergy$Sales, 1), "百万円\n")
cat("シナジーあり合併予測最終年度：", tail(df_fc_with_synergy$Sales, 1), "百万円\n")
library(ggplot2)
library(forecast)
library(dplyr)
library(tidyr)
# --------------------------
# データの準備
# --------------------------
sales_data <- data.frame(
Year = c("Dec '24", "Sep '24", "Jun '24", "Mar '24", "Dec '23", "Sep '23", "Jun '23", "Mar '23",
"Dec '22", "Sep '22", "Jun '22", "Mar '22", "Dec '21", "Sep '21", "Jun '21", "Mar '21",
"Dec '20", "Sep '20", "Jun '20", "Mar '20", "Dec '19", "Sep '19", "Jun '19", "Mar '19",
"Dec '18", "Sep '18", "Jun '18", "Mar '18", "Dec '17", "Sep '17", "Jun '17", "Mar '17",
"Dec '16", "Sep '16", "Jun '16"),
Panasonic = c(2152590, 2129620, 2121690, 2196100, 2180880, 2089730, 2029690, 2154420,
2160590, 2090070, 1973860, 1965440, 1889800, 1741130, 1792420, 1825500,
1814130, 1667240, 1391910, 1734980, 1911210, 1953300, 1891130, 1919750,
2074810, 1999440, 2008730, 2070000, 2054300, 1992590, 1865270, 1921300,
1868800, 1765000, 1748510),
Sumitomo = c(564963, 510921, 527784, 453632, 500284, 416401, 440178, 376305,
463414, 423509, 428886, 353898, 417857, 335198, 343820, 289055,
313934, 280364, 245583, 301353, 272993, 294739, 235009, 401912,
314130, 343577, 249274, 365472, 294417, 333448, 228661, 341537,
258252, 305913, 207662)
)
# 時系列データの作成
sales_data <- sales_data %>%
arrange(desc(Year)) %>%
mutate(Total = Panasonic + Sumitomo)
ts_total <- ts(sales_data$Total, start = c(2016, 3), frequency = 4)
ts_panasonic <- ts(sales_data$Panasonic, start = c(2016, 3), frequency = 4)
ts_sumitomo <- ts(sales_data$Sumitomo, start = c(2016, 3), frequency = 4)
# --------------------------
# ARIMAモデルによる予測（合計売上高に対して）
# --------------------------
fit_total <- auto.arima(ts_total)
forecast_no_synergy <- forecast(fit_total, h = 8)
# シナジーありの場合（毎四半期2%成長）
forecast_with_synergy <- forecast_no_synergy
forecast_with_synergy$mean <- forecast_with_synergy$mean * 1.02^(1:8)
forecast_with_synergy$lower <- forecast_with_synergy$lower * 1.02^(1:8)
forecast_with_synergy$upper <- forecast_with_synergy$upper * 1.02^(1:8)
# --------------------------
# 予測データの作成
# --------------------------
forecast_quarters <- seq(2025, length.out = 8, by = 0.25)
df_fc_no_synergy <- data.frame(
Year = forecast_quarters,
Sales = as.numeric(forecast_no_synergy$mean),
Lower = forecast_no_synergy$lower[,2],
Upper = forecast_no_synergy$upper[,2],
Category = "シナジーなし"
)
df_fc_with_synergy <- data.frame(
Year = forecast_quarters,
Sales = as.numeric(forecast_with_synergy$mean),
Lower = forecast_with_synergy$lower[,2],
Upper = forecast_with_synergy$upper[,2],
Category = "シナジーあり"
)
df_fc <- bind_rows(df_fc_no_synergy, df_fc_with_synergy)
# --------------------------
# プロットの作成（予測）
# --------------------------
color_map <- c("シナジーなし" = "blue", "シナジーあり" = "purple")
fill_map <- color_map
p <- ggplot(data = df_fc, aes(x = Year, y = Sales, color = Category)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = Lower, ymax = Upper, fill = Category), alpha = 0.2) +
scale_color_manual(values = color_map, name = "シナリオ") +
scale_fill_manual(values = fill_map, name = "シナリオ") +
labs(x = "年度", y = "売上高（百万円）", title = "パナソニック・住友林業M&A後の売上予測") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top", legend.text = element_text(size = 10))
print(p)
# --------------------------
# 実績データのプロット（2024年以前）
# --------------------------
actual_plot <- ggplot(data = sales_data, aes(x = Year)) +
geom_line(aes(y = Panasonic, color = "パナソニック"), size = 1.2) +
geom_line(aes(y = Sumitomo, color = "住友林業"), size = 1.2) +
scale_color_manual(values = c("パナソニック" = "darkgreen", "住友林業" = "orange")) +
labs(x = "年度", y = "売上高（百万円）", title = "パナソニック・住友林業 売上高推移（2024年以前）") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top", legend.text = element_text(size = 10))
print(actual_plot)
# --------------------------
# 予測結果のデータフレーム表示
# --------------------------
print(df_fc)
library(ggplot2)
library(forecast)
library(dplyr)
library(tidyr)
# --------------------------
# データの準備
# --------------------------
sales_data <- data.frame(
Year = c("Dec '24", "Sep '24", "Jun '24", "Mar '24", "Dec '23", "Sep '23", "Jun '23", "Mar '23",
"Dec '22", "Sep '22", "Jun '22", "Mar '22", "Dec '21", "Sep '21", "Jun '21", "Mar '21",
"Dec '20", "Sep '20", "Jun '20", "Mar '20", "Dec '19", "Sep '19", "Jun '19", "Mar '19",
"Dec '18", "Sep '18", "Jun '18", "Mar '18", "Dec '17", "Sep '17", "Jun '17", "Mar '17",
"Dec '16", "Sep '16", "Jun '16"),
Panasonic = c(2152590, 2129620, 2121690, 2196100, 2180880, 2089730, 2029690, 2154420,
2160590, 2090070, 1973860, 1965440, 1889800, 1741130, 1792420, 1825500,
1814130, 1667240, 1391910, 1734980, 1911210, 1953300, 1891130, 1919750,
2074810, 1999440, 2008730, 2070000, 2054300, 1992590, 1865270, 1921300,
1868800, 1765000, 1748510),
Sumitomo = c(564963, 510921, 527784, 453632, 500284, 416401, 440178, 376305,
463414, 423509, 428886, 353898, 417857, 335198, 343820, 289055,
313934, 280364, 245583, 301353, 272993, 294739, 235009, 401912,
314130, 343577, 249274, 365472, 294417, 333448, 228661, 341537,
258252, 305913, 207662)
)
# 時系列データの作成
sales_data <- sales_data %>%
arrange(desc(Year)) %>%
mutate(Total = Panasonic + Sumitomo)
ts_total <- ts(sales_data$Total, start = c(2016, 3), frequency = 4)
ts_panasonic <- ts(sales_data$Panasonic, start = c(2016, 3), frequency = 4)
ts_sumitomo <- ts(sales_data$Sumitomo, start = c(2016, 3), frequency = 4)
# --------------------------
# ARIMAモデルによる予測（合計売上高に対して）
# --------------------------
fit_total <- auto.arima(ts_total)
forecast_no_synergy <- forecast(fit_total, h = 8)
# シナジーありの場合（毎四半期2%成長）
forecast_with_synergy <- forecast_no_synergy
forecast_with_synergy$mean <- forecast_with_synergy$mean * 1.02^(1:8)
forecast_with_synergy$lower <- forecast_with_synergy$lower * 1.02^(1:8)
forecast_with_synergy$upper <- forecast_with_synergy$upper * 1.02^(1:8)
# --------------------------
# 予測データの作成
# --------------------------
forecast_quarters <- seq(2025, length.out = 8, by = 0.25)
df_fc_no_synergy <- data.frame(
Year = forecast_quarters,
Sales = as.numeric(forecast_no_synergy$mean),
Lower = forecast_no_synergy$lower[,2],
Upper = forecast_no_synergy$upper[,2],
Category = "シナジーなし"
)
df_fc_with_synergy <- data.frame(
Year = forecast_quarters,
Sales = as.numeric(forecast_with_synergy$mean),
Lower = forecast_with_synergy$lower[,2],
Upper = forecast_with_synergy$upper[,2],
Category = "シナジーあり"
)
df_fc <- bind_rows(df_fc_no_synergy, df_fc_with_synergy)
# --------------------------
# プロットの作成（予測）
# --------------------------
color_map <- c("シナジーなし" = "blue", "シナジーあり" = "purple")
fill_map <- color_map
p <- ggplot(data = df_fc, aes(x = Year, y = Sales, color = Category)) +
geom_line(linewidth = 1.2) +
geom_ribbon(aes(ymin = Lower, ymax = Upper, fill = Category), alpha = 0.2) +
scale_color_manual(values = color_map, name = "シナリオ") +
scale_fill_manual(values = fill_map, name = "シナリオ") +
labs(x = "年度", y = "売上高（百万円）", title = "パナソニック・住友林業M&A後の売上予測") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top", legend.text = element_text(size = 10))
print(p)
# --------------------------
# 実績データのプロット（2024年以前）
# --------------------------
actual_plot <- ggplot(data = sales_data, aes(x = Year)) +
geom_line(aes(y = Panasonic, color = "パナソニック"), size = 1.2) +
geom_line(aes(y = Sumitomo, color = "住友林業"), size = 1.2) +
scale_color_manual(values = c("パナソニック" = "darkgreen", "住友林業" = "orange")) +
labs(x = "年度", y = "売上高（百万円）", title = "パナソニック・住友林業 売上高推移（2024年以前）") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top", legend.text = element_text(size = 10))
print(actual_plot)
# --------------------------
# 予測結果のデータフレーム表示
# --------------------------
print(df_fc)
ggplot_build(p)
head(df_fc)
library(ggplot2)
library(forecast)
library(dplyr)
library(tidyr)
# --------------------------
# データの準備
# --------------------------
sales_data <- data.frame(
Year = c("Dec '24", "Sep '24", "Jun '24", "Mar '24", "Dec '23", "Sep '23", "Jun '23", "Mar '23",
"Dec '22", "Sep '22", "Jun '22", "Mar '22", "Dec '21", "Sep '21", "Jun '21", "Mar '21",
"Dec '20", "Sep '20", "Jun '20", "Mar '20", "Dec '19", "Sep '19", "Jun '19", "Mar '19",
"Dec '18", "Sep '18", "Jun '18", "Mar '18", "Dec '17", "Sep '17", "Jun '17", "Mar '17",
"Dec '16", "Sep '16", "Jun '16"),
Panasonic = c(2152590, 2129620, 2121690, 2196100, 2180880, 2089730, 2029690, 2154420,
2160590, 2090070, 1973860, 1965440, 1889800, 1741130, 1792420, 1825500,
1814130, 1667240, 1391910, 1734980, 1911210, 1953300, 1891130, 1919750,
2074810, 1999440, 2008730, 2070000, 2054300, 1992590, 1865270, 1921300,
1868800, 1765000, 1748510),
Sumitomo = c(564963, 510921, 527784, 453632, 500284, 416401, 440178, 376305,
463414, 423509, 428886, 353898, 417857, 335198, 343820, 289055,
313934, 280364, 245583, 301353, 272993, 294739, 235009, 401912,
314130, 343577, 249274, 365472, 294417, 333448, 228661, 341537,
258252, 305913, 207662)
)
# 時系列データの作成
sales_data <- sales_data %>%
arrange(desc(Year)) %>%
mutate(Total = Panasonic + Sumitomo)
ts_total <- ts(sales_data$Total, start = c(2016, 3), frequency = 4)
ts_panasonic <- ts(sales_data$Panasonic, start = c(2016, 3), frequency = 4)
ts_sumitomo <- ts(sales_data$Sumitomo, start = c(2016, 3), frequency = 4)
# --------------------------
# ARIMAモデルによる予測（合計売上高に対して）
# --------------------------
fit_total <- auto.arima(ts_total)
forecast_no_synergy <- forecast(fit_total, h = 8)
# シナジーありの場合（毎四半期2%成長）
forecast_with_synergy <- forecast_no_synergy
forecast_with_synergy$mean <- forecast_with_synergy$mean * 1.02^(1:8)
forecast_with_synergy$lower <- forecast_with_synergy$lower * 1.02^(1:8)
forecast_with_synergy$upper <- forecast_with_synergy$upper * 1.02^(1:8)
# --------------------------
# 予測データの作成
# --------------------------
forecast_quarters <- seq(2025, length.out = 8, by = 0.25)
df_fc_no_synergy <- data.frame(
Year = forecast_quarters,
Sales = as.numeric(forecast_no_synergy$mean),
Lower = forecast_no_synergy$lower[,2],
Upper = forecast_no_synergy$upper[,2],
Category = "シナジーなし"
)
df_fc_with_synergy <- data.frame(
Year = forecast_quarters,
Sales = as.numeric(forecast_with_synergy$mean),
Lower = forecast_with_synergy$lower[,2],
Upper = forecast_with_synergy$upper[,2],
Category = "シナジーあり"
)
df_fc <- bind_rows(df_fc_no_synergy, df_fc_with_synergy)
df_fc$Year <- as.Date(paste0(floor(df_fc$Year), "-01-01")) + (df_fc$Year %% 1) * 365
# --------------------------
# プロットの作成（予測）
# --------------------------
color_map <- c("シナジーなし" = "blue", "シナジーあり" = "purple")
fill_map <- color_map
p <- ggplot(data = df_fc, aes(x = Year, y = Sales, color = Category)) +
geom_line(linewidth = 1.2) +
geom_ribbon(aes(ymin = Lower, ymax = Upper, fill = Category), alpha = 0.2) +
scale_color_manual(values = color_map, name = "シナリオ") +
scale_fill_manual(values = fill_map, name = "シナリオ") +
labs(x = "年度", y = "売上高（百万円）", title = "パナソニック・住友林業M&A後の売上予測") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top", legend.text = element_text(size = 10))
print(p)
# --------------------------
# 実績データのプロット（2024年以前）
# --------------------------
actual_plot <- ggplot(data = sales_data, aes(x = Year)) +
geom_line(aes(y = Panasonic, color = "パナソニック"), size = 1.2) +
geom_line(aes(y = Sumitomo, color = "住友林業"), size = 1.2) +
scale_color_manual(values = c("パナソニック" = "darkgreen", "住友林業" = "orange")) +
labs(x = "年度", y = "売上高（百万円）", title = "パナソニック・住友林業 売上高推移（2024年以前）") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top", legend.text = element_text(size = 10))
print(actual_plot)
# --------------------------
# 予測結果のデータフレーム表示
# --------------------------
print(df_fc)
library(ggplot2)
library(forecast)
library(dplyr)
library(tidyr)
# --------------------------
# データの準備
# --------------------------
sales_data <- data.frame(
Year = c("Dec '24", "Sep '24", "Jun '24", "Mar '24", "Dec '23", "Sep '23", "Jun '23", "Mar '23",
"Dec '22", "Sep '22", "Jun '22", "Mar '22", "Dec '21", "Sep '21", "Jun '21", "Mar '21",
"Dec '20", "Sep '20", "Jun '20", "Mar '20", "Dec '19", "Sep '19", "Jun '19", "Mar '19",
"Dec '18", "Sep '18", "Jun '18", "Mar '18", "Dec '17", "Sep '17", "Jun '17", "Mar '17",
"Dec '16", "Sep '16", "Jun '16"),
Panasonic = c(2152590, 2129620, 2121690, 2196100, 2180880, 2089730, 2029690, 2154420,
2160590, 2090070, 1973860, 1965440, 1889800, 1741130, 1792420, 1825500,
1814130, 1667240, 1391910, 1734980, 1911210, 1953300, 1891130, 1919750,
2074810, 1999440, 2008730, 2070000, 2054300, 1992590, 1865270, 1921300,
1868800, 1765000, 1748510),
Sumitomo = c(564963, 510921, 527784, 453632, 500284, 416401, 440178, 376305,
463414, 423509, 428886, 353898, 417857, 335198, 343820, 289055,
313934, 280364, 245583, 301353, 272993, 294739, 235009, 401912,
314130, 343577, 249274, 365472, 294417, 333448, 228661, 341537,
258252, 305913, 207662)
)
# 時系列データの作成
sales_data <- sales_data %>%
arrange(desc(Year)) %>%
mutate(Total = Panasonic + Sumitomo)
ts_total <- ts(sales_data$Total, start = c(2016, 3), frequency = 4)
ts_panasonic <- ts(sales_data$Panasonic, start = c(2016, 3), frequency = 4)
ts_sumitomo <- ts(sales_data$Sumitomo, start = c(2016, 3), frequency = 4)
# --------------------------
# ARIMAモデルによる予測（合計売上高に対して）
# --------------------------
fit_total <- auto.arima(ts_total)
forecast_no_synergy <- forecast(fit_total, h = 8)
# シナジーありの場合（毎四半期2%成長）
forecast_with_synergy <- forecast_no_synergy
forecast_with_synergy$mean <- forecast_with_synergy$mean * 1.02^(1:8)
forecast_with_synergy$lower <- forecast_with_synergy$lower * 1.02^(1:8)
forecast_with_synergy$upper <- forecast_with_synergy$upper * 1.02^(1:8)
# --------------------------
# 予測データの作成
# --------------------------
forecast_quarters <- seq(2025, length.out = 8, by = 0.25)
df_fc_no_synergy <- data.frame(
Year = forecast_quarters,
Sales = as.numeric(forecast_no_synergy$mean),
Lower = forecast_no_synergy$lower[,2],
Upper = forecast_no_synergy$upper[,2],
Category = "シナジーなし"
)
df_fc_with_synergy <- data.frame(
Year = forecast_quarters,
Sales = as.numeric(forecast_with_synergy$mean),
Lower = forecast_with_synergy$lower[,2],
Upper = forecast_with_synergy$upper[,2],
Category = "シナジーあり"
)
df_fc <- bind_rows(df_fc_no_synergy, df_fc_with_synergy)
df_fc$Year <- as.Date(paste0(floor(df_fc$Year), "-01-01")) + (df_fc$Year %% 1) * 365
# --------------------------
# プロットの作成（予測）
# --------------------------
color_map <- c("シナジーなし" = "blue", "シナジーあり" = "purple")
fill_map <- color_map
p <- ggplot(data = df_fc, aes(x = Year, y = Sales, color = Category)) +
geom_line(linewidth = 1.2) +
geom_ribbon(aes(ymin = Lower, ymax = Upper, fill = Category), alpha = 0.2) +
scale_color_manual(values = color_map, name = "シナリオ") +
scale_fill_manual(values = fill_map, name = "シナリオ") +
labs(x = "年度", y = "売上高（百万円）", title = "パナソニック・住友林業M&A後の売上予測") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top", legend.text = element_text(size = 10))
print(p)
# --------------------------
# 実績データのプロット（2024年以前）
# --------------------------
actual_plot <- ggplot(data = sales_data, aes(x = Year)) +
geom_line(aes(y = Panasonic, color = "パナソニック", group = 1)), size = 1.2) +
geom_line(aes(y = Sumitomo, color = "住友林業", group = 1)), size = 1.2) +
scale_color_manual(values = c("パナソニック" = "darkgreen", "住友林業" = "orange")) +
labs(x = "年度", y = "売上高（百万円）", title = "パナソニック・住友林業 売上高推移（2024年以前）") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top", legend.text = element_text(size = 10))
print(actual_plot)
# --------------------------
# 予測結果のデータフレーム表示
# --------------------------
print(df_fc)
q()
# 必要パッケージをインストール（なければ）
needed <- setdiff(
c("data.table", "fixest", "texreg", "fwildclusterboot"),
rownames(installed.packages())
)
if (length(needed) > 0) install.packages(needed)
data <- read.csv("参加・非参加企業_完全データ_0527_utf8")
data <- read.csv("参加・非参加企業_完全データ_0527_utf8")
library(readxl)
参加_非参加企業_完全データ_0527_utf8 <- read_excel("\"C:\\Users\\ogawa\\OneDrive\\東工大\\後藤研究室\\RA\\RA_シドニー\\5月13日以前_引継ぎデータのまま\\参加・非参加企業_完全データ_0527_utf8.csv\"")
if exist "%USERPROFILE%\Desktop" (cd /d "%USERPROFILE%\Desktop") else if exist "%USERPROFILE%\OneDrive\Desktop" (cd /d "%USERPROFILE%\OneDrive\Desktop")
if exist "%USERPROFILE%\Desktop" (cd /d "%USERPROFILE%\Desktop") else if exist "%USERPROFILE%\OneDrive\Desktop" (cd /d "%USERPROFILE%\OneDrive\Desktop")
echo %CD%
l
echo %CD%
a
$desk = [Environment]::GetFolderPath('Desktop'); Set-Location $desk; Get-Location
cd /d "%USERPROFILE%\Desktop"
setwd("C:/Users/ogawa/OneDrive/マニュアル/デスクトップ/ra-bootcamp-warmup")
git add .
git status
cd /c/Users/ogawa/OneDrive/デスクトップ/ra-bootcamp-warmup
